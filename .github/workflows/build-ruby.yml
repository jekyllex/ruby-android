name: Build ruby

on:
  - workflow_dispatch

jobs:

  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: "/opt/termux/android-sdk"
      NDK: "/opt/termux/android-ndk"

    strategy:
      matrix:
        target_arch: [aarch64, arm, i686, x86_64]
      fail-fast: false

    steps:

      - name: Clone repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Get packages from termux-packages
        uses: actions/checkout@v3
        with:
          repository: termux/termux-packages
          path: termux-packages

      - name: Setup environment
        run: |
          # Use custom packaging properties for JekyllEx
          rm termux-packages/scripts/properties.sh termux-packages/scripts/build-bootstraps.sh
          mv termux-packages/* .
          rm -rf termux-packages
          mv properties.sh build-bootstraps.sh scripts/

      - name: Build ruby and needed dependencies
        run: ./scripts/run-docker.sh ./build-package.sh -a ${{ matrix.target_arch }} clang glib libcompiler-rt libllvm libxml2 lld llvm make ndk-sysroot pkg-config binutils ruby

      - name: Checksums for built *.deb files
        if: always()
        run: find output -type f -name "*.deb" -exec sha256sum "{}" \; | sort -k2

      - name: Make debs archive
        run: |
          mkdir -p debs
          tar cf debs/deb-${{ matrix.target_arch }}.tar output/*.deb

      - name: Create bootstrap archive
        if: always()
        run: |
          ./scripts/run-docker.sh ./clean.sh
          ./scripts/run-docker.sh ./scripts/build-bootstraps.sh --architectures ${{ matrix.target_arch }}

      - name: Store debs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: debs-${{ matrix.target_arch }}
          path: debs/deb-${{ matrix.target_arch }}.tar

      - name: Store bootstraps
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: bootstrap-${{ matrix.target_arch }}
          path: "*.zip"

  upload:
    runs-on: ubuntu-latest
    needs: build

    steps:

      - name: Clone repository
        uses: actions/checkout@v2

      - name: Get all artifacts from build action
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Prepare bootstraps to upload
        if: always()
        run: |
          mkdir -p bootstraps
          for f in bootstrap-*; do cd "$f" && mv "$f".zip ../"${f//bootstrap/ruby}".zip && cd ..; done
          mv ruby-*.zip bootstraps

      - name: Upload bootstraps
        if: always()
        uses: JamesIves/github-pages-deploy-action@v4.3.0
        with:
          folder: bootstraps
          branch: gh-pages
          clean: false
