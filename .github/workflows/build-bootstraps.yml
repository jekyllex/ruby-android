name: Build bootstraps

on:
  workflow_dispatch:
    inputs:
      release:
        type: boolean
        description: "Release built bootstraps"
      tag:
        type: string
        description: "Tag for the release"

jobs:
  bootstraps:
    runs-on: ubuntu-latest

    env:
      NDK: "/opt/termux/android-ndk"
      ANDROID_HOME: "/opt/termux/android-sdk"

    strategy:
      fail-fast: false
      matrix:
        target_arch: [aarch64, arm, i686, x86_64]

    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get packages from termux-packages
        uses: actions/checkout@v4
        with:
          path: termux-packages
          repository: termux/termux-packages
          ref: 'acf1df1e90034ce0100ac54726ae56792bf56859'

      - name: Setup environment
        run: |
          # Use custom packaging properties for JekyllEx
          mv termux-packages/* .
          mv *.sh scripts/
          for package in patches/*; do
            cp -r $package packages;
          done
          find packages/git -type f -name "*subpackage*" -exec rm {} +
          find packages/libxml2 -type f -name "*python*" -exec rm {} +

      - name: Create bootstrap archive
        run: |
          ./scripts/run-docker.sh ./clean.sh
          ./scripts/run-docker.sh ./scripts/build-bootstraps.sh --android10 --architectures ${{ matrix.target_arch }}

      - name: Store bootstrap
        uses: actions/upload-artifact@v4
        with:
          name: ruby-${{ matrix.target_arch }}
          path: "*.zip"

  release:
    needs: bootstraps
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event.inputs.release == 'true' && startsWith(github.event.inputs.tag, 'v')
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch bootstrap archives
        uses: actions/download-artifact@v4
        with:
          path: ./
          merge-multiple: true

      - name: Create new tag
        run: |
          git tag "${{ github.event.inputs.tag }}"
          git push --tags

      - name: Publish bootstrap zips to GitHub release
        uses: termux/upload-release-action@v4.1.0
        with:
          file: "*.zip"
          file_glob: true
          checksums: sha256
          tag: ${{ github.event.inputs.tag }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}

  apk:
    needs: bootstraps
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Fetch bootstrap archives
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ./

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build apk
        run: |
          git clone https://github.com/jekyllex/termux-app --depth 1
          mv *.zip termux-app/bootstraps
          cd termux-app
          ./gradlew assembleDebug

      - name: Store generated APK file
        uses: actions/upload-artifact@v4
        with:
          name: termux-app
          path: ./termux-app/app/build/outputs/apk/debug/*.apk
