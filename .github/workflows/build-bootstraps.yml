name: Build bootstraps

on:
  - workflow_dispatch

jobs:
  bootstraps:
    runs-on: ubuntu-latest

    env:
      ANDROID_HOME: "/opt/termux/android-sdk"
      NDK: "/opt/termux/android-ndk"

    strategy:
      fail-fast: false
      matrix:
        target_arch: [aarch64, arm, i686, x86_64]

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          remove-dotnet: 'true'
          remove-codeql: 'true'
          remove-haskell: 'true'
          root-reserve-mb: '30000'
          remove-docker-images: 'true'

      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get packages from termux-packages
        uses: actions/checkout@v4
        with:
          repository: termux/termux-packages
          path: termux-packages
          fetch-depth: 1

      - name: Setup environment
        run: |
          # Use custom packaging properties for JekyllEx
          rm termux-packages/scripts/properties.sh termux-packages/scripts/build-bootstraps.sh
          mv termux-packages/* .
          rm -rf termux-packages
          mv properties.sh build-bootstraps.sh scripts/
          for package in patches/*; do
            cp -r $package packages;
          done
          find packages/git -type f -name "*subpackage*" -exec rm {} +
          find packages/libxml2 -type f -name "*python*" -exec rm {} +

      - name: Create bootstrap archive
        run: |
          ./scripts/run-docker.sh ./clean.sh
          ./scripts/run-docker.sh ./build-package.sh libxml2 libxslt -a ${{ matrix.target_arch }} -q
          ./scripts/run-docker.sh ./scripts/build-bootstraps.sh --android10 --architectures ${{ matrix.target_arch }}

      - name: Store bootstrap
        uses: actions/upload-artifact@v4
        with:
          name: bootstrap-${{ matrix.target_arch }}
          path: "*.zip"
